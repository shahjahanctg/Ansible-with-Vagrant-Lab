# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
# Define VMs with static private IP addresses, vcpu, memory and vagrant-box.
  boxes = [
    {
      :name => "web1",
      :box => "centos.box",
      :ram => 1024,
      :vcpu => 1,
      :ip => "192.168.10.10"
    },
    {
      :name => "web2",
      :box => "centos.box",
      :ram => 1024,
      :vcpu => 1,
       :ip => "192.168.10.11"
    },
    {
      :name => "lb",
      :box => "centos.box",
      :ram => 1024,
      :vcpu => 1,
      :ip => "192.168.10.12"
    },
    {
      :name => "db",
      :box => "centos.box",
      :ram => 1024,
      :vcpu => 1,
      :ip => "192.168.10.13"
    }
  ]

  # Provision each of the VMs.
  boxes.each do |opts|
    config.vm.define opts[:name] do |config|
#   Only Enable this if you are connecting to Proxy server
#      config.proxy.http    = "http://usernam:password@x.y:80"â‡’ Needed if you have a proxy
#      config.proxy.https   = "http://usernam:password@x.y:80"
#      config.proxy.no_proxy = "localhost,127.0.0.1"
      config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true
      config.ssh.insert_key = false
      config.vm.box = opts[:box]
      config.vm.hostname = opts[:name]
      config.vm.provider :libvirt do |v|
        v.memory = opts[:ram]
        v.cpus = opts[:vcpu]
      end
      config.vm.network :private_network, ip: opts[:ip]
#      config.vm.provision :file do |file|
#         file.source     = './keys/vagrant'
#         file.destination    = '/tmp/vagrant'
#      end
      config.vm.provision "shell", path: "bootstrap.sh"
#      config.vm.provision :ansible do |ansible|
#        ansible.verbose = "v"
#        ansible.playbook = "playbook.yml"
#      end
    end
  end
end

